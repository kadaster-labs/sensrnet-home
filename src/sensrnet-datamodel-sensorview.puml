@startuml "SensRNet-Datamodel-SensorView"

package LegalEntity <<Rectangle>> {
    together {
        class ContactDetails {
            name: String
            email: String
            phone: String
        }

        class LegalEntity {
            id: SensRNet.LegalEntityId
            website: URL
        }

        LegalEntity *- ContactDetails : contactPerson
        LegalEntity *- ContactDetails : publicContactDetails
    }

    enum Role {
        DEVICE_OWNER (device eigenaar)
        {abstract} TECHNICAL_STEWARD (technisch verantwoordelijke)
        {abstract} LEGAL_STEWARD (juridisch verantwoordelijke)
        {abstract} DATA_STEWARD (data verantwoordelijke)
    }

    class User {
        id: SensRNet.UserId
        socialId: String
        username: String
        email: String
        // rights connected to role
        userRole: UserRole
    }

    note left
        <size:10>LegalEntitys are the 'real'</size>
        <size:10>objects but will be</size>
        <size:10>represented by users. Users</size>
        <size:10>will connect with a social</size>
        <size:10>or business account</size>
        <size:10>(e.g. Office365, Google)</size>
    end note

    enum UserRole {
        USER
        ADMIN
    }

    LegalEntity o-- "*" User : users
    LegalEntity o- "*" Role : roles
    User - UserRole : role
}

package sensor <<Rectangle>> {

    class SensorAggregate #DDD {
        id: SensRNet.AggregateId
    }

    together {

        class Thing {
            aggregateId: SensRNet.AggregateId
            id: SensRNet.ThingId
            .. SensorThingsAPI ..
            name: String
            description: String
            {abstract} properties: jsonObject
            .. SensRNet ..
            category: Category
            connectivity: String
            {abstract} networkOperator: String
            {abstract} powerSupply: String
        }

        note top of Thing
          A 'Thing' is referring to the sensor installation
          or device which is conceivable in the physical
          world. Thing is the SensorThingsAPI standard.
          This can also be referred to as Device
        end note

        class Sensor {
            aggregateId: SensRNet.AggregateId
            id: SensRNet.SensorId
            .. SensorThingsAPI ..
            name: String
            description: String
            {abstract} metadata: any
            .. SensRNet ..
            type: SensorType
            manufacturer: String
            supplier: String
            documentation: URL
        }

    }

    class Datastream {
        aggregateId: SensRNet.AggregateId
        id: SensRNet.DatastreamId
        .. SensorThingsAPI ..
        name: String
        description: String
        unitOfMeasurement: jsonObject
        observedArea: GML
        {abstract} observationType: ValueCode
        {abstract} phenomenonTime: period
        {abstract} resultTime: period
        .. SensRNet ..
        theme: List<Theme>
        dataQuality: String
        isActive: Boolean 
        isPublic: Boolean
        isOpenData: Boolean
        containsPIData: Boolean
        isReusable: Boolean
        documentation: URL
        dataLink: URL
        {abstract} dataClassification: String
    }

    class ObservedGoal {
        aggregateId: SensRNet.AggregateId
        id: SensRNet.ObservedGoalId
        .. SensRNet ..
        name: String
        description: String
        legalGround: String
        legalGroundLink: URL
    }

    class Location {
        aggregateId: SensRNet.AggregateId
        id: SensRNet.LocationId
        .. SensorThingsAPI ..
        name: String
        description: String
        location: xyH-array
        .. SensRNet ..
        // reference to external Id
        // e.g. IMGEO+ objectId
        baseObjectId: String
    }

    enum Category {
        SENSOR
        CAMERA
        BEACON
    }

    enum Theme {
        Weather
        NatureAndEnvironment
        Waste
        Safety
        Mobility
        SoilAndUnderground
        Other
    }

    enum SensorType {
        .. beacon ..
        NavigationBeacon
        .. camera ..
        EnvironmentalZoneCameras
        SecurityCamera
        TraphicFlashlight
        .. sensor ..
        WeatherStation
        WindGauge
        WasteContainers
        FineDustSensor
        UVSensor
        LightCell
        MotionSensor
        FireDetector
        WaterLevelMeter
        MicrophoneOrSoundMeter
        PedometerCounters
        RadarDetector
        GMSSensor
        DetectionLoop
        HeightDetectionDevice
    }

    ' this is added compared to SensorThingsAPI
    Thing "1" *- "*" Sensor

    Thing "1" o- "1" Category
    Thing "1" *-- "1" Location
    Thing "1" *-- "*" Datastream

    Sensor "1" *-- "*" Datastream : datastreams
    Sensor "1" o-- "1" SensorType

    Datastream "1" - "1" ObservedGoal
    Datastream "1" o-- "*" Theme
}

LegalEntity "1" o-- "*" Thing : is <device-owner>
' LegalEntity "1" *-- "*" Sensor : has <a sensor-owner>
' LegalEntity "0" *-- "*" Sensor : has <a legal-steward>
' LegalEntity "0" *-- "*" Datastream : has <a data-steward>

note top of sensor
    <i>cursive</i> field are out of scope
    of the MVP product
end note

@enduml
